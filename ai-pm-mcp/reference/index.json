{
  "metadata": {
    "version": "1.1.0",
    "created": "2025-01-17T12:00:00Z",
    "lastUpdated": "2025-08-04T14:00:00Z",
    "description": "Flow-based index of AI Project Manager directives for MCP workflow navigation with branch-aware configuration system",
    "totalDirectives": 17,
    "flowPhases": 6,
    "humanReadableDocs": "reference/directivesmd/",
    "organizationReference": "reference/organization.json",
    "configurationSystem": "branch-aware (.ai-pm-config.json - modifiable only on ai-pm-org-main branch)"
  },
  "projectLifecycleFlow": {
    "phase1": {
      "name": "System & Project Bootstrap",
      "description": "Initial system setup, server connection, and project structure establishment",
      "priority": "critical",
      "prerequisites": ["MCP server available", "Project directory accessible"],
      "directives": {
        "01-system-initialization": {
          "file": "reference/directives/01-system-initialization.json",
          "purpose": "MCP server connection, optimized project state analysis, and branch-aware configuration loading",
          "triggers": ["MCP server startup", "First connection", "System boot"],
          "keyWorkflows": ["mcpServerConnection", "optimizedTwoTierAnalysis", "branchAwareConfigurationLoading", "automaticStateNotification"],
          "criticalSettings": ["max_file_lines", "auto_modularize", "theme_discovery", "management_folder_name"],
          "optimizations": {
            "fastPath": "~100ms for existing projects with valid cache",
            "comprehensiveAnalysis": "~2-5s for new projects requiring full analysis",
            "cacheValidation": "24-hour cache validity with git hash verification"
          }
        },
        "02-project-initialization": {
          "file": "reference/directives/02-project-initialization.json",
          "purpose": "Project setup for new and existing projects",
          "triggers": ["New project creation", "Existing project analysis"],
          "keyWorkflows": ["newProject", "existingProject"],
          "criticalSettings": ["autoTaskCreation", "lastUpdatedBehavior"]
        },
        "database-integration": {
          "file": "reference/directives/database-integration.json",
          "purpose": "Optimized database integration with hybrid file-database architecture and schema validation",
          "triggers": ["Project initialization", "Database setup", "State synchronization"],
          "keyWorkflows": ["hybridArchitecture", "realTimeStateSynchronization", "workActivityTracking", "schemaValidation"],
          "criticalSettings": ["database.enabled", "synchronization.atomicOperations"],
          "improvements": {
            "schemaAlignment": "Fixed API mismatches between code and database schema",
            "asyncSupport": "Corrected async/sync interface consistency",  
            "testCoverage": "9/9 database tests passing with comprehensive validation"
          }
        },
        "15-git-integration": {
          "file": "reference/directives/15-git-integration.json",
          "purpose": "Simplified branch-based Git architecture with native branch operations",
          "triggers": ["Session boot with project code changes", "Git repository state detection needed", "External code modifications detected"],
          "keyWorkflows": ["sessionBootGitDetection", "organizationalReconciliation", "gitStateTracking", "branchGitIntegration"],
          "criticalSettings": ["git.enabled", "git.auto_init_repo", "git.code_change_detection", "branch_management.enabled"],
          "architecture": {
            "approach": "Pure Git branch-based (eliminates complex instance management)",
            "benefits": ["Native Git operations", "Simplified codebase", "Proven branching capabilities"],
            "eliminated": "Complex directory-based instance system (.mcp-instances/)"
          }
        }
      },
      "keyDecisionPoints": [
        "New project vs existing project",
        "Project structure compatibility", 
        "User approval for project blueprint",
        "Branch detection for configuration access control"
      ],
      "nextPhase": "Session start or project continuation",
      "errorHandling": "Fail gracefully with clear error messages, require user intervention for critical issues"
    },
    "phase2": {
      "name": "Work Period Management", 
      "description": "Work period initialization, context restoration, and task resumption logic",
      "priority": "high",
      "prerequisites": ["Project structure initialized", "Configuration loaded"],
      "directives": {
        "03-session-management": {
          "file": "reference/directives/03-session-management.json",
          "purpose": "Handle database-enhanced session continuity and boot sequences with high-priority detection",
          "triggers": ["Work period start", "Continue development", "Task resumption", "High-priority item detection"],
          "keyWorkflows": ["databaseSessionBootProtocol", "sessionContextRestoration", "implementationPlanIntegration", "highPriorityBootDetection"],
          "criticalSettings": ["tasks.resumeTasksOnStart", "tasks.autoTaskCreation"]
        },
        "12-user-interaction": {
          "file": "reference/directives/12-user-interaction.json",
          "purpose": "User approval and communication protocols",
          "triggers": ["User approval needed", "Communication requirements"],
          "keyWorkflows": ["userApprovalRequirements", "communicationProtocol", "preferenceAdaptation"],
          "criticalSettings": ["project.backwardsCompatibility"]
        },
        "database-integration": {
          "file": "reference/directives/database-integration.json",
          "purpose": "Database-enhanced session continuity and state preservation",
          "triggers": ["Session boot", "Context restoration", "State synchronization"],
          "keyWorkflows": ["workActivityTracking", "contextSnapshots", "taskStatusTracking"],
          "criticalSettings": ["sessions.contextSnapshots", "synchronization.realTimeUpdates"]
        }
      },
      "keyDecisionPoints": [
        "Resume existing tasks or start new work",
        "Context mode selection",
        "Implementation plan continuation"
      ],
      "nextPhase": "Project understanding or direct task execution",
      "errorHandling": "Graceful degradation with user guidance, preserve session state"
    },
    "phase3": {
      "name": "Project Understanding",
      "description": "Theme discovery, context loading, and project structure analysis",
      "priority": "high",
      "prerequisites": ["Project blueprint available", "Session context established"],
      "directives": {
        "04-theme-management": {
          "file": "reference/directives/04-theme-management.json",
          "purpose": "Theme discovery and validation",
          "triggers": ["Theme discovery", "Theme validation", "Theme modification"],
          "keyWorkflows": ["automaticThemeDiscovery", "themeValidation", "themeModification"],
          "criticalSettings": ["themes.autoDiscovery", "themes.sharedFileThreshold"]
        },
        "05-context-loading": {
          "file": "reference/directives/05-context-loading.json",
          "purpose": "Database-enhanced context loading strategies with multi-flow support",
          "triggers": ["Task execution", "Context escalation", "Memory optimization", "Multi-flow loading"],
          "keyWorkflows": ["contextModeSelection", "databaseEnhancedLoading", "contextEscalation", "selectiveFlowLoading"],
          "criticalSettings": ["contextLoading.defaultMode", "contextLoading.readmeFirst", "contextLoading.maxFlowFiles"]
        },
        "13-metadata-management": {
          "file": "reference/directives/13-metadata-management.json",
          "purpose": "Project metadata maintenance",
          "triggers": ["Metadata updates", "Project characteristic changes"],
          "keyWorkflows": ["metadataInitialization", "updateTriggers", "workflowIntegration"],
          "criticalSettings": []
        },
        "directive-escalation-system": {
          "file": "reference/directives/directive-escalation-system.json",
          "purpose": "Three-tier directive escalation system for progressive detail access",
          "triggers": ["Directive ambiguity", "User communication needed", "Complex workflow execution", "Edge case handling"],
          "keyWorkflows": ["escalationChain", "forcedEscalationOperations", "contextPreservation"],
          "criticalSettings": ["escalation.automaticJSON", "escalation.requireMDApproval"],
          "escalationTiers": {
            "compressed": "directive-compressed.json - routine operations",
            "json": "reference/directives/*.json - detailed implementation specs", 
            "markdown": "reference/directivesmd/*.md - comprehensive context and examples"
          },
          "forcedEscalationOperations": [
            "Git operations", "Session management", "Branch operations",
            "Database operations", "Logging/Documentation", "Theme discovery", 
            "Project structure changes"
          ]
        }
      },
      "keyDecisionPoints": [
        "Theme approval by user",
        "Context mode selection",
        "Metadata update requirements"
      ],
      "nextPhase": "Active development cycle",
      "errorHandling": "Require user approval for theme changes, fallback to project-wide context if needed"
    },
    "phase4": {
      "name": "Active Development Cycle",
      "description": "Task execution, implementation planning, and file operations",
      "priority": "high",
      "prerequisites": ["Themes established", "Context loaded", "Implementation plan active"],
      "directives": {
        "06-task-management": {
          "file": "reference/directives/06-task-management.json",
          "purpose": "Task lifecycle and execution management with multi-flow integration and high-priority task system",
          "triggers": ["Task creation", "Task execution", "Sidequest management", "Multi-flow task planning", "Scope escalation", "High-priority task detection"],
          "keyWorkflows": ["taskLifecycleManagement", "sidequestManagement", "completionPathIntegration", "multiFlowTaskIntegration", "highPriorityTaskManagement", "scopeEscalationWorkflow"],
          "criticalSettings": ["tasks.maxActiveSidequests", "tasks.parallelTasksEnabled"]
        },
        "07-implementation-plans": {
          "file": "reference/directives/07-implementation-plans.json",
          "purpose": "Strategic implementation planning with high-priority escalation support",
          "triggers": ["Milestone implementation", "Strategic planning", "High-priority issue escalation"],
          "keyWorkflows": ["planLifecycle", "versionControl", "archivalSystem", "highPriorityPlanCreation"],
          "criticalSettings": []
        },
        "10-file-operations": {
          "file": "reference/directives/10-file-operations.json",
          "purpose": "File modifications and line limit enforcement",
          "triggers": ["File modification", "Code generation", "Line limit enforcement"],
          "keyWorkflows": ["lineLimitEnforcement", "antiPlaceholderProtocol", "fileModificationProtocol"],
          "criticalSettings": ["project.maxFileLineCount", "project.avoidPlaceholders"]
        },
        "11-quality-assurance": {
          "file": "reference/directives/11-quality-assurance.json",
          "purpose": "Code quality and validation standards",
          "triggers": ["Code validation", "Testing requirements", "Quality checks"],
          "keyWorkflows": ["testingProtocol", "validationRequirements", "codeQualityStandards"],
          "criticalSettings": ["validation.enforceTaskMilestoneReference", "validation.validateJsonSchemas"]
        },
        "14-branch-management": {
          "file": "reference/directives/14-branch-management.json",
          "purpose": "Git branch lifecycle management with user attribution",
          "triggers": ["Branch creation request", "Multiple developer scenario", "Parallel development needed", "Branch merge operations"],
          "keyWorkflows": ["branchCreation", "branchIsolation", "branchMerging", "branchManagement"],
          "criticalSettings": ["branch_management.enabled", "branch_management.canonical_branch_authority", "branch_management.max_active_branches"]
        }
      },
      "keyDecisionPoints": [
        "Task priority and execution order",
        "File modularization triggers",
        "Quality validation requirements",
        "Implementation plan phase completion"
      ],
      "nextPhase": "Ongoing maintenance or completion validation",
      "errorHandling": "Validate all changes, require user approval for structural changes, maintain data integrity"
    },
    "phase5": {
      "name": "Ongoing Maintenance",
      "description": "Project management updates, logging, and continuous maintenance",
      "priority": "medium",
      "prerequisites": ["Active development in progress", "Organizational files established"],
      "directives": {
        "08-project-management": {
          "file": "reference/directives/08-project-management.json",
          "purpose": "Project blueprint and multi-flow management",
          "triggers": ["Blueprint updates", "Flow changes", "Logic modifications", "Flow file creation"],
          "keyWorkflows": ["blueprintManagement", "multiFlowDocumentation", "logicTracking", "flowIndexManagement"],
          "criticalSettings": ["validation.requireApprovalForStructureChanges", "contextLoading.maxFlowFiles"]
        },
        "09-logging-documentation": {
          "file": "reference/directives/09-logging-documentation.json",
          "purpose": "Logging and documentation maintenance",
          "triggers": ["Significant decisions", "Documentation updates"],
          "keyWorkflows": ["simplifiedLogging", "automaticArchiving", "documentationUpdates"],
          "criticalSettings": ["archiving.projectlogicSizeLimit", "archiving.deleteArchivesOlderThan"]
        }
      },
      "keyDecisionPoints": [
        "Documentation update requirements",
        "Log archival triggers",
        "Project structure modifications"
      ],
      "nextPhase": "Completion validation or return to active development",
      "errorHandling": "Preserve historical data, require user approval for structural changes"
    },
    "phase6": {
      "name": "Completion & Validation",
      "description": "Project completion tracking, TODO resolution, and final validation",
      "priority": "high",
      "prerequisites": ["All milestones approaching completion", "TODO review required"],
      "directives": {
        "06-task-management": {
          "file": "reference/directives/06-task-management.json",
          "purpose": "TODO review and resolution before completion",
          "triggers": ["TODO review", "Project completion preparation"],
          "keyWorkflows": ["todoReviewRequirements", "completionPathIntegration"],
          "criticalSettings": []
        },
        "08-project-management": {
          "file": "reference/directives/08-project-management.json",
          "purpose": "Final project validation and completion",
          "triggers": ["Completion tracking", "Final validation"],
          "keyWorkflows": ["completionPathManagement"],
          "criticalSettings": []
        }
      },
      "keyDecisionPoints": [
        "TODO review completion",
        "Final milestone validation",
        "Project archival decisions"
      ],
      "nextPhase": "Project completion or return to active development",
      "errorHandling": "Ensure all TODOs are resolved, require user confirmation for completion"
    }
  },
  "flowTransitions": {
    "phase1_to_phase2": {
      "trigger": "Project structure initialized successfully",
      "validation": ["Project blueprint approved", "Themes basic structure created"],
      "failureAction": "Return to phase1 with error details"
    },
    "phase2_to_phase3": {
      "trigger": "Session context established",
      "validation": ["Configuration loaded", "User preferences applied"],
      "failureAction": "Restart session boot sequence"
    },
    "phase3_to_phase4": {
      "trigger": "Project understanding complete",
      "validation": ["Themes approved", "Context mode selected", "Implementation plan ready"],
      "failureAction": "Return to theme discovery or context loading"
    },
    "phase4_to_phase5": {
      "trigger": "Development cycle maintenance needed",
      "validation": ["Active tasks in progress", "Documentation updates required"],
      "failureAction": "Continue active development"
    },
    "phase4_to_phase6": {
      "trigger": "Project nearing completion",
      "validation": ["All milestones near completion", "TODO review required"],
      "failureAction": "Return to active development"
    },
    "phase5_to_phase4": {
      "trigger": "Return to active development",
      "validation": ["New tasks created", "Implementation plan updated"],
      "failureAction": "Continue maintenance activities"
    },
    "phase6_to_phase4": {
      "trigger": "Additional work required",
      "validation": ["New tasks identified", "TODOs converted to tasks"],
      "failureAction": "Complete TODO resolution first"
    }
  },
  "commonWorkflows": {
    "userApprovalRequired": [
      "Project blueprint changes",
      "Theme modifications",
      "Completion path updates",
      "Implementation plan creation",
      "Structural changes to project organization"
    ],
    "automaticUpdates": [
      "Session summary maintenance",
      "Task status tracking",
      "File modification logging",
      "Context escalation",
      "Log archival when size limits reached"
    ],
    "criticalValidations": [
      "Theme-task-milestone integration",
      "File line limits and modularization",
      "Cross-reference consistency",
      "TODO resolution before completion"
    ]
  },
  "quickReference": {
    "systemStart": "phase1.01-system-initialization",
    "workPeriodBoot": "phase2.03-session-management",
    "databaseIntegration": "phase1.database-integration + phase2.database-integration",
    "stateSynchronization": "phase1.database-integration + phase2.database-integration",
    "workActivityTracking": "phase2.database-integration",
    "directiveEscalation": "phase3.directive-escalation-system",
    "contextEscalation": "phase3.05-context-loading + phase3.context-escalation-system",
    "themeDiscovery": "phase3.04-theme-management",
    "contextLoading": "phase3.05-context-loading",
    "multiFlowResourceOptimization": "phase3.05-context-loading",
    "taskExecution": "phase4.06-task-management",
    "multiFlowTaskIntegration": "phase4.06-task-management",
    "highPriorityTasks": "phase4.06-task-management + phase2.03-session-management",
    "scopeEscalation": "phase4.06-task-management",
    "highPriorityBootDetection": "phase2.03-session-management",
    "fileOperations": "phase4.10-file-operations",
    "qualityCheck": "phase4.11-quality-assurance",
    "userInteraction": "phase2.12-user-interaction",
    "projectCompletion": "phase6.06-task-management",
    "logging": "phase5.09-logging-documentation",
    "flowIndexManagement": "phase5.08-project-management",
    "gitIntegration": "phase1.15-git-integration",
    "branchManagement": "phase4.14-branch-management",
    "branchAwareConfiguration": "branchAwareConfigurationSystem",
    "configurationAccess": "branchAwareConfigurationSystem.accessControl",
    "optimizedInitialization": "phase1.01-system-initialization.optimizations"
  },
  "branchAwareConfigurationSystem": {
    "configurationFile": ".ai-pm-config.json",
    "location": "projectManagement/.ai-pm-config.json",
    "accessControl": {
      "ai-pm-org-main": {
        "readAccess": true,
        "writeAccess": true,
        "description": "Full configuration control on main branch"
      },
      "workBranches": {
        "readAccess": true,
        "writeAccess": false,
        "description": "Inherit configuration immutably from main branch",
        "mechanism": "git show ai-pm-org-main:projectManagement/.ai-pm-config.json"
      }
    },
    "benefits": [
      "Prevents configuration conflicts during merges",
      "Ensures consistent behavior across work branches", 
      "Centralized management folder naming",
      "Team collaboration with shared settings"
    ],
    "errorHandling": {
      "configModificationAttempt": "RuntimeError on work branches with guidance to switch to ai-pm-org-main",
      "configNotFound": "Fallback to system defaults with warning",
      "gitAccessFailure": "Graceful degradation to local defaults"
    }
  },
  "configurationHierarchy": {
    "critical": [
      "project.maxFileLineCount",
      "project.avoidPlaceholders",
      "project.management_folder_name",
      "tasks.resumeTasksOnStart",
      "themes.autoDiscovery",
      "git.enabled",
      "git.auto_init_repo",
      "git.code_change_detection",
      "branch_management.enabled",
      "branch_management.canonical_branch_authority"
    ],
    "important": [
      "tasks.maxActiveSidequests",
      "contextLoading.defaultMode",
      "contextLoading.maxFlowFiles",
      "validation.enforceTaskMilestoneReference",
      "validation.requireApprovalForStructureChanges",
      "git.auto_init_repo",
      "git.code_change_detection",
      "branch_management.max_active_branches",
      "branch_management.branch_naming_validation",
      "branch_management.auto_delete_merged"
    ],
    "optional": [
      "archiving.deleteArchivesOlderThan",
      "themes.conflictResolution",
      "project.backwardsCompatibility",
      "project.minifyJson"
    ]
  }
}