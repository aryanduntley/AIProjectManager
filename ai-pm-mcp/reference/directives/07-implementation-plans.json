{
  "metadata": {
    "id": "07-implementation-plans",
    "title": "Implementation Plans Directives",
    "priority": "high",
    "frequency": "milestone-based",
    "version": "1.0.0",
    "humanReadable": "reference/directivesmd/07-implementation-plans.md"
  },
  "triggers": [
    "Milestone readiness",
    "Implementation planning",
    "Strategic planning",
    "Execution phase start",
    "High-priority issue escalation",
    "Scope-exceeding problem detection"
  ],
  "workflows": {
    "implementationPlanSystem": {
      "directive": "Bridge gap between high-level milestone objectives and detailed task execution",
      "directories": {
        "active": "Implementations/active/",
        "completed": "Implementations/completed/"
      },
      "fileNaming": "M{milestone-id}-v{version}-{description}.md",
      "lifecycle": ["Creation", "Execution", "Archival", "Next Milestone"],
      "templateSource": "reference/templates/implementation-plan-template.md",
      "integrationPoints": [
        "Completion Path: Each milestone references its implementation plan",
        "Project Flow: Implementation plans align with flow step requirements",
        "Task Generation: Plans break down into phases, phases generate tasks",
        "Session Boot: AI loads active implementation plan context"
      ]
    },
    "lifecycleManagement": {
      "creationProcess": [
        "Milestone selected from projectManagement/Tasks/completion-path.json",
        "AI analyzes current project state and requirements",
        "Detailed implementation plan created with phases and strategy",
        "User approval required before execution begins"
      ],
      "executionProcess": [
        "Plan divided into logical phases with clear objectives",
        "Each phase generates specific tasks in Tasks/active/",
        "Progress tracked through phase completion and flow step progress",
        "Plan can be updated if requirements change during implementation"
      ],
      "completionProcess": [
        "All plan phases completed and milestone objectives met",
        "Plan archived to Implementations/completed/",
        "Next milestone analyzed and new implementation plan created",
        "Lessons learned documented for future reference"
      ]
    },
    "versionControl": {
      "directive": "Prevent conflicts and maintain change history",
      "versionIncrement": "Automatic versioning if plan already exists for milestone",
      "duplicatePrevention": "Milestone completion check before creating new plan",
      "changeManagement": "New version for significant scope changes",
      "userConfirmation": "Always confirm before creating new version",
      "versioningRules": {
        "v1": "Initial implementation plan for milestone",
        "v2+": "Revised plans if milestone scope or requirements change",
        "preservation": "Never overwrite - previous versions preserved"
      }
    },
    "archivalSystem": {
      "directive": "Systematically archive completed implementation plans",
      "automaticTriggers": [
        "Milestone completion",
        "Plan supersession",
        "Project restructure"
      ],
      "archivalProcess": [
        "Completion validation",
        "File movement from active/ to completed/",
        "Metadata update with completion date",
        "Reference preservation in projectlogic.jsonl"
      ],
      "namingInArchive": {
        "completed": "Retain original naming",
        "superseded": "Add suffix -superseded",
        "indexMaintenance": "Update archive index with completion dates"
      }
    },
    "sessionBootIntegration": {
      "directive": "Transform session boot process with strategic continuity",
      "enhancedBootSequence": [
        "Read ProjectBlueprint, ProjectFlow, projectlogic.jsonl",
        "Read completion-path.json for milestone status",
        "NEW: Check for active implementation plan",
        "NEW: Load current implementation plan context and phase progress",
        "Review incomplete tasks in context of current implementation plan",
        "Generate tasks for current implementation plan phase",
        "Begin execution with full strategic context"
      ],
      "benefits": [
        "Strategic continuity across sessions",
        "Reduced context switching",
        "Focused task generation",
        "Progress clarity"
      ]
    },
    "highPriorityPlanCreation": {
      "directive": "Create dedicated implementation plans for high-priority issues that exceed normal task scope",
      "purpose": "Provide strategic implementation framework for complex scope-escalated issues",
      "required": true,
      "triggerConditions": [
        "Issue requires architectural changes across multiple systems",
        "Security vulnerabilities needing systematic resolution approach",
        "Performance optimization requiring coordinated system changes",
        "Technical debt remediation affecting multiple components",
        "Integration challenges requiring comprehensive planning"
      ],
      "namingConvention": "H-<timestamp>-<description>.md",
      "fileLocation": "Implementations/active/",
      "templateSource": "Uses existing implementation-plan-template.md with priority markers",
      "integrationWithHighTasks": {
        "relationship": "HIGH-TASK files reference H- implementation plans",
        "coordination": "Implementation plan provides strategic framework for high-priority task execution",
        "progress tracking": "Plan phases align with HIGH-TASK subtask completion"
      },
      "planStructure": {
        "priorityMarkers": "Plan title includes [HIGH PRIORITY] indicator",
        "urgencyField": "Priority field set to 'HIGH' in metadata",
        "escalationReason": "Documents why issue required scope escalation",
        "impactAssessment": "Analyzes affected systems and coordination requirements",
        "resourceEstimation": "Estimates timeline and expertise needed",
        "riskMitigation": "Identifies risks and mitigation strategies"
      },
      "userApprovalRequired": {
        "creation": true,
        "structuralChanges": true,
        "scopeExpansion": true,
        "resourceAllocation": false
      }
    }
  },
  "configSettings": {
    "implementationPlans.autoGenerate": {
      "default": true,
      "type": "boolean",
      "description": "Automatically generate implementation plans for ready milestones"
    },
    "implementationPlans.phasesRequired": {
      "default": true,
      "type": "boolean",
      "description": "Require phase breakdown in implementation plans"
    },
    "implementationPlans.userApproval": {
      "default": true,
      "type": "boolean",
      "description": "Require user approval before plan execution"
    },
    "implementationPlans.highPriorityNaming": {
      "default": "H-<timestamp>-<description>.md",
      "type": "string",
      "description": "Naming pattern for high-priority implementation plans"
    }
  },
  "integrations": [
    "08-project-management",
    "06-task-management",
    "03-session-management",
    "09-logging-documentation"
  ],
  "dependencies": [
    "Implementations/active/",
    "Implementations/completed/",
    "projectManagement/Tasks/completion-path.json",
    "reference/templates/implementation-plan-template.md"
  ],
  "keyOperations": [
    "Plan creation",
    "Lifecycle management",
    "Version control",
    "Archival system"
  ],
  "templateStructure": {
    "metadata": [
      "Milestone ID",
      "Status (active|completed|superseded)",
      "Version",
      "Created/Updated dates",
      "Completion target"
    ],
    "analysis": [
      "Current state assessment",
      "Requirements breakdown",
      "Dependencies identification",
      "Risk factors and mitigation",
      "Architecture considerations"
    ],
    "strategy": [
      "Implementation approach and rationale",
      "Key architecture decisions",
      "Integration points with existing systems",
      "Testing and validation strategy",
      "Performance considerations"
    ],
    "phases": [
      "Phase objectives",
      "Deliverables",
      "Task breakdown",
      "Dependencies",
      "Success criteria"
    ],
    "successCriteria": [
      "Completion markers",
      "Validation requirements",
      "Quality gates",
      "User acceptance criteria"
    ],
    "notes": [
      "Implementation decisions",
      "User feedback and modifications",
      "Lessons learned"
    ]
  },
  "changeManagement": {
    "scopeChanges": "New version created for significant requirement changes",
    "minorUpdates": "In-place updates for clarifications and small adjustments",
    "approvalProcess": "All plan modifications require user approval",
    "changeDocumentation": "All changes logged in projectlogic.jsonl"
  }
}