{
  "metadata": {
    "id": "context-escalation-system",
    "title": "Directive Context Escalation System",
    "purpose": "Enable AI to access progressively more detailed directive context when facing ambiguity",
    "version": "1.0.0",
    "created": "2025-01-20",
    "criticalFor": "Complex workflow execution, user communication, edge case handling"
  },
  "escalationChain": {
    "description": "Three-tier escalation system for directive context access",
    "tiers": {
      "tier1": {
        "name": "Compressed Directives",
        "file": "mcp-server/core-context/directive-compressed.json",
        "purpose": "Basic workflow understanding and quick reference",
        "coverage": "~60% of directive information",
        "usage": "Always start here for initial directive understanding",
        "limitations": ["No user communication protocols", "No detailed examples", "No edge case handling"]
      },
      "tier2": {
        "name": "JSON Directives",
        "files": "reference/directives/{directive-id}.json",
        "purpose": "Detailed implementation specifications and structured workflows",
        "coverage": "~85% of directive information", 
        "usage": "Escalate when compressed context insufficient for implementation",
        "advantages": ["Detailed workflow steps", "Configuration specifications", "Validation rules", "Integration requirements"],
        "limitations": ["Limited user communication examples", "Reduced behavioral context", "Fewer edge case scenarios"]
      },
      "tier3": {
        "name": "Markdown Directives",
        "files": "../docs/directives/{directive-id}.md",
        "purpose": "Comprehensive context with examples, edge cases, and communication protocols",
        "coverage": "100% of directive information",
        "usage": "Escalate for complex scenarios requiring user communication or edge case handling",
        "advantages": ["Complete user communication protocols", "Detailed examples and templates", "Edge case handling", "Behavioral context", "Implementation rationale"]
      }
    }
  },
  "escalationTriggers": {
    "automaticEscalation": {
      "compressedToJSON": [
        "Implementation details needed beyond basic workflow",
        "Configuration validation required",
        "Workflow step clarification needed",
        "Integration requirements unclear",
        "Validation rules ambiguous"
      ],
      "approvalPolicy": "AI can escalate automatically without user approval"
    },
    "userApprovalRequired": {
      "JSONtoMD": [
        "First-time complex workflow execution (sidequests, context switching)",
        "User communication protocols needed",
        "Configuration limit handling required",
        "Complex validation scenarios with edge cases",
        "Error recovery procedures needed",
        "Workflow transition messaging required"
      ],
      "approvalPolicy": "AI should request user permission before accessing MD files for comprehensive analysis"
    }
  },
  "escalationScenarios": {
    "firstSidequestCreation": {
      "trigger": "User requests sidequest or AI detects sidequest need",
      "escalationPath": "compressed → 06-task-management.json → 06-task-management.md",
      "reason": "Need user communication templates and context switching procedures",
      "criticalMissingContext": [
        "Sidequest creation messaging to user",
        "Context preservation procedures", 
        "Limit exceeded handling options",
        "Workflow transition communication"
      ],
      "userApproval": "Required for MD escalation"
    },
    "configurationLimitExceeded": {
      "trigger": "Any configurable limit reached (sidequests, file lines, themes, etc.)",
      "escalationPath": "compressed → {directive}.json → {directive}.md",
      "reason": "Need user-facing option presentations and recovery procedures",
      "criticalMissingContext": [
        "Limit exceeded warning messages",
        "User option presentations", 
        "Recovery procedure explanations",
        "Alternative approach suggestions"
      ],
      "userApproval": "Required for MD escalation"
    },
    "userCommunicationNeeded": {
      "trigger": "Complex user interaction required (approvals, transitions, errors)",
      "escalationPath": "compressed → {directive}.json → {directive}.md", 
      "reason": "Need exact messaging templates and communication protocols",
      "criticalMissingContext": [
        "Message template formats",
        "Approval request procedures",
        "Error communication protocols",
        "Status update messaging"
      ],
      "userApproval": "Required for MD escalation"
    },
    "workflowAmbiguity": {
      "trigger": "Uncertain workflow step or validation requirement",
      "escalationPath": "compressed → {directive}.json",
      "reason": "Need detailed implementation specifications",
      "criticalMissingContext": [
        "Step-by-step procedures",
        "Validation rule details",
        "Error condition handling",
        "Integration requirements"
      ],
      "userApproval": "Not required for JSON escalation"
    },
    "edgeCaseHandling": {
      "trigger": "Unusual situation not covered by basic workflows",
      "escalationPath": "compressed → {directive}.json → {directive}.md",
      "reason": "Need comprehensive edge case handling and recovery procedures", 
      "criticalMissingContext": [
        "Edge case identification",
        "Recovery procedures",
        "Alternative workflow options",
        "Failure condition handling"
      ],
      "userApproval": "Required for MD escalation"
    }
  },
  "escalationProtocols": {
    "contextPreservation": {
      "requirement": "Maintain findings from each escalation level to avoid re-reading same files",
      "implementation": [
        "Cache directive context from each tier accessed",
        "Build comprehensive understanding progressively",
        "Avoid redundant file access within same workflow",
        "Preserve escalation reasoning for user communication"
      ]
    },
    "userApprovalProcess": {
      "approvalMessage": "I need to access more detailed directive documentation to handle this complex scenario properly. May I read the comprehensive markdown documentation for [directive-name]?",
      "reasoningRequired": "Always explain why additional context is needed",
      "alternatives": "Offer simpler alternatives if user declines escalation",
      "gracefulDegradation": "Proceed with available context if escalation denied"
    },
    "escalationLogging": {
      "requirement": "Log all directive escalations for analytics and learning",
      "logElements": [
        "Trigger scenario",
        "Escalation path taken",
        "User approval status",
        "Context found at each tier", 
        "Successful resolution",
        "User satisfaction with outcome"
      ],
      "purpose": "Improve escalation triggers and optimize directive content distribution"
    }
  },
  "directiveMapping": {
    "allDirectives": {
      "01-system-initialization": {"compressed": true, "json": true, "md": true},
      "02-project-initialization": {"compressed": true, "json": true, "md": true},
      "03-session-management": {"compressed": true, "json": true, "md": true},
      "04-theme-management": {"compressed": true, "json": true, "md": true},
      "05-context-loading": {"compressed": true, "json": true, "md": true},
      "06-task-management": {"compressed": true, "json": true, "md": true},
      "07-implementation-plans": {"compressed": true, "json": true, "md": true},
      "08-project-management": {"compressed": true, "json": true, "md": true},
      "09-logging-documentation": {"compressed": true, "json": true, "md": true},
      "10-file-operations": {"compressed": true, "json": true, "md": true},
      "11-quality-assurance": {"compressed": true, "json": true, "md": true},
      "12-user-interaction": {"compressed": true, "json": true, "md": true},
      "13-metadata-management": {"compressed": true, "json": true, "md": true},
      "database-integration": {"compressed": true, "json": true, "md": false}
    },
    "highComplexityDirectives": [
      "06-task-management",
      "03-session-management", 
      "05-context-loading",
      "04-theme-management",
      "12-user-interaction"
    ],
    "userCommunicationCritical": [
      "06-task-management",
      "12-user-interaction",
      "02-project-initialization",
      "04-theme-management"
    ]
  },
  "performanceOptimization": {
    "escalationCaching": {
      "requirement": "Cache accessed directive content within session",
      "implementation": "Avoid re-reading same directive files within single workflow",
      "clearancePolicy": "Clear cache on session end or context mode change"
    },
    "intelligentEscalation": {
      "requirement": "Learn which scenarios typically require which escalation levels",
      "implementation": "Track escalation success patterns to optimize future escalations",
      "adaptation": "Adjust escalation triggers based on effectiveness patterns"
    }
  },
  "qualityAssurance": {
    "escalationValidation": {
      "requirement": "Validate that escalation resolved the ambiguity",
      "checkpoints": [
        "Was sufficient context found?",
        "Was user interaction successful?", 
        "Was workflow completed correctly?",
        "Did escalation improve outcome?"
      ]
    },
    "fallbackProcedures": {
      "insufficientContext": "Request user clarification if all escalation levels insufficient",
      "accessDenied": "Proceed with best available context and document limitations",
      "escalationFailure": "Revert to simpler workflow alternatives when possible"
    }
  }
}