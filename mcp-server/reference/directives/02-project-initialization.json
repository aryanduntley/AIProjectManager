{
  "metadata": {
    "id": "02-project-initialization",
    "title": "Project Initialization Directives",
    "priority": "critical",
    "frequency": "project-start",
    "version": "1.0.0",
    "humanReadable": "../docs/directives/02-project-initialization.md"
  },
  "triggers": [
    "New project creation",
    "Existing project analysis",
    "First project setup"
  ],
  "workflows": {
    "newProject": {
      "directive": "Discuss with user goals of project. Be as detailed as needed to fulfil the goals and needs of the organization files",
      "userApprovalRequired": true,
      "steps": [
        {
          "action": "createProjectBlueprint",
          "description": "Create project blueprint after gathering information",
          "required": true,
          "substeps": [
            "Create metadata.json with project characteristics",
            "Ensure blueprint is assessed and approved by user"
          ]
        },
        {
          "action": "projectFlowDiscussion",
          "description": "Discuss project flow with user",
          "required": true,
          "substeps": [
            "Discuss user interactions with software parts",
            "Discuss outcomes of user actions",
            "Outline user flows and steps in flow-index.json and individual flow files"
          ]
        },
        {
          "action": "projectLogicDevelopment",
          "description": "Develop project logic understanding",
          "required": true,
          "substeps": [
            "Know logic of how and why for project parts",
            "Track logic and reasoning from user discussion",
            "Record in projectlogic as project progresses",
            "Update metadata.json when logic reveals new characteristics"
          ]
        },
        {
          "action": "themeAssessment",
          "description": "Assess and create themes",
          "required": true,
          "userApprovalRequired": true,
          "substeps": [
            "Outline starting point of themes",
            "Create assessment based on blueprint, flow, and logic",
            "Present assessment to user for approval",
            "Generate theme files after approval",
            "Update metadata.json during theme discovery",
            "Create todos for missing data and log in todos.jsonl"
          ]
        },
        {
          "action": "completionPathDefinition",
          "description": "Define completion path",
          "required": true,
          "userApprovalRequired": true,
          "substeps": [
            "Outline completion path after themes generated",
            "Get user approval of completion path"
          ]
        },
        {
          "action": "implementationPlanAndScaffolding",
          "description": "Generate implementation plan for scaffolding",
          "required": true,
          "userApprovalRequired": "conditional",
          "condition": "autoTaskCreation is false",
          "substeps": [
            "Generate first implementation plan for scaffolding",
            "Include README.md and README.json for every directory",
            "Update README files as changes are made"
          ]
        },
        {
          "action": "taskGeneration",
          "description": "Generate first task file",
          "required": true,
          "userApprovalRequired": "conditional",
          "condition": "autoTaskCreation is false",
          "substeps": [
            "Generate first task file with implementation plan"
          ]
        },
        {
          "action": "projectExecution",
          "description": "Begin project execution",
          "required": true,
          "substeps": [
            "Handle task execution as normal",
            "Evolve organizational files as needed",
            "Update blueprint metadata during scaffolding",
            "Manage todos through tasks"
          ]
        },
        {
          "action": "scaffoldingCompletion",
          "description": "Complete scaffolding phase",
          "required": true,
          "substeps": [
            "Review todos for file references needed for themes",
            "Review other core organizational files"
          ]
        }
      ]
    },
    "existingProject": {
      "directive": "Analyze existing project and create organization structure",
      "userApprovalRequired": true,
      "steps": [
        {
          "action": "createProjectBlueprint",
          "description": "Create project blueprint after gathering information",
          "required": true,
          "substeps": [
            "Create metadata.json with project characteristics",
            "Ensure blueprint is assessed and approved by user"
          ]
        },
        {
          "action": "projectFlowDiscussion",
          "description": "Discuss project flow with user",
          "required": true,
          "substeps": [
            "Discuss user interactions with software parts",
            "Discuss outcomes of user actions",
            "Outline user flows and steps in flow-index.json and individual flow files"
          ]
        },
        {
          "action": "projectLogicDevelopment",
          "description": "Develop project logic understanding",
          "required": true,
          "substeps": [
            "Know logic of how and why for project parts",
            "Track logic and reasoning from user discussion",
            "Record in projectlogic as project progresses",
            "Update metadata.json when logic reveals new characteristics"
          ]
        },
        {
          "action": "themeAssessment",
          "description": "Assess and create themes",
          "required": true,
          "userApprovalRequired": true,
          "substeps": [
            "Outline starting point of themes",
            "Create assessment based on blueprint, flow, and logic",
            "Present assessment to user for approval",
            "Generate theme files after approval",
            "Update metadata.json during theme discovery",
            "Create todos for missing data and log in todos.jsonl"
          ]
        },
        {
          "action": "projectEvaluation",
          "description": "Evaluate entire project",
          "required": true,
          "userApprovalRequired": true,
          "warning": "Resource intensive process",
          "substeps": [
            "Ask user if ready to begin (may take a while)",
            "Review infrastructure upon approval",
            "Update core organizational files and metadata"
          ]
        },
        {
          "action": "projectFolderAnalysis",
          "description": "Analyze project folders",
          "required": true,
          "substeps": [
            "Evaluate project folders",
            "Assess project size for reading strategy",
            "Determine aggressiveness of file reading based on size",
            "Warn user about resource intensity"
          ]
        },
        {
          "action": "directoryByDirectoryAssessment",
          "description": "Assess each directory systematically",
          "required": true,
          "recursive": true,
          "substeps": [
            "Read files in each directory one by one",
            "Avoid dependency folders (deps, node_modules, git, etc.)",
            "Create/update README.md file in directory",
            "Create README.json file",
            "Update organizational files with new information",
            "Discuss theme updates with user for approval",
            "Discuss blueprint updates with user for approval",
            "Discuss logic amendments with user for approval",
            "Log noteworthy information",
            "Use README.json for progress tracking"
          ]
        },
        {
          "action": "finalReviewAndCompletion",
          "description": "Final review of core files",
          "required": true,
          "substeps": [
            "Review core files for consistency and accuracy",
            "Confirm initialization is complete"
          ]
        },
        {
          "action": "implementationPlanGeneration",
          "description": "Generate first implementation plan",
          "required": true,
          "userApprovalRequired": "conditional",
          "condition": "autoTaskCreation is false"
        },
        {
          "action": "taskGeneration",
          "description": "Generate first task file",
          "required": true,
          "userApprovalRequired": "conditional",
          "condition": "autoTaskCreation is false"
        },
        {
          "action": "projectExecution",
          "description": "Begin project execution",
          "required": true,
          "substeps": [
            "Handle task execution as normal",
            "Evolve organizational files as needed",
            "Update blueprint metadata as project progresses",
            "Manage todos through tasks"
          ]
        }
      ]
    }
  },
  "configSettings": {
    "autoTaskCreation": {
      "default": false,
      "type": "boolean",
      "description": "Automatically create tasks without user approval"
    },
    "lastUpdatedBehavior": {
      "default": "overwrite",
      "type": "string",
      "enum": ["overwrite", "append"],
      "description": "How to handle README last updated sections"
    },
    "readmeJsonFilename": {
      "default": "README.json",
      "type": "string",
      "description": "Configurable filename for AI-specific directory metadata"
    }
  },
  "integrations": [
    "13-metadata-management",
    "04-theme-management",
    "06-task-management",
    "07-implementation-plans",
    "08-project-management"
  ],
  "dependencies": [
    "ProjectBlueprint/",
    "ProjectFlow/",
    "ProjectLogic/",
    "ProjectBlueprint/metadata.json",
    "reference/templates/README-template.md",
    "reference/templates/README-template.json"
  ],
  "keyOperations": [
    "Blueprint creation",
    "Theme discovery",
    "Flow definition",
    "Metadata initialization",
    "Project evaluation",
    "README management"
  ],
  "validation": {
    "blueprintApproval": "User must approve project blueprint before proceeding",
    "themeApproval": "User must approve theme assessment and generation",
    "completionPathApproval": "User must approve completion path definition",
    "organizationalFileUpdates": "User must approve updates to core organizational files"
  },
  "errorHandling": {
    "userRejection": "Revise and resubmit for approval",
    "incompleteInformation": "Continue gathering information before proceeding",
    "resourceConstraints": "Adjust reading strategy based on project size",
    "sessionTermination": "Use README.json files to track progress"
  },
  "progressTracking": {
    "method": "README.json files",
    "indicators": [
      "README.json presence indicates directory assessment complete",
      "README.json lastUpdated indicates currency of assessment",
      "Missing README.json indicates directory needs assessment"
    ]
  },
  "documentationRequirements": {
    "readmeManagement": {
      "readmeMd": "Standard human-readable documentation following best practices",
      "readmeJson": "AI-specific metadata for quick directory assessment"
    },
    "templates": [
      "reference/templates/README-template.md",
      "reference/templates/README-template.json"
    ]
  }
}