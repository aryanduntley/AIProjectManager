{
  "metadata": {
    "id": "12-user-interaction",
    "title": "User Interaction Directives",
    "priority": "critical",
    "frequency": "continuous",
    "version": "1.0.0",
    "humanReadable": "../docs/directives/12-user-interaction.md"
  },
  "triggers": [
    "User approval required",
    "Configuration change",
    "Error encountered",
    "Unclear requirements",
    "Theme modifications",
    "Structure changes",
    "Session initialization",
    "Task resumption",
    "Branch creation/merging",
    "Cross-branch coordination"
  ],
  "workflows": {
    "userApprovalRequirements": {
      "directive": "Certain operations require explicit user approval before execution",
      "mandatoryApprovalOperations": [
        "Theme creation or modification",
        "ProjectBlueprint changes",
        "Completion path modifications",
        "Context escalation",
        "File structure changes affecting multiple themes",
        "Breaking changes to shared files",
        "Branch creation requests",
        "Branch merge operations"
      ],
      "approvalFormat": {
        "template": "I need your approval to [specific action].\n\nCurrent state: [description]\nProposed change: [detailed change description]\nImpact: [assessment of effects]\nAlternatives: [other options if applicable]\n\nDo you approve this change? (yes/no)"
      },
      "steps": [
        {
          "action": "identifyApprovalRequirement",
          "description": "Check if operation requires user approval",
          "required": true
        },
        {
          "action": "formatApprovalRequest",
          "description": "Format approval request with context and impact",
          "required": true,
          "condition": "approval required"
        },
        {
          "action": "awaitUserResponse",
          "description": "Wait for explicit user approval before proceeding",
          "required": true,
          "userApprovalRequired": true
        },
        {
          "action": "documentApprovalDecision",
          "description": "Log approval decision and reasoning",
          "required": true
        }
      ]
    },
    "userCommunicationProtocol": {
      "directive": "Communicate clearly and concisely with users about system operations",
      "communicationGuidelines": [
        "Explain technical decisions in plain language",
        "Provide context for why actions are needed",
        "Offer multiple options when possible",
        "Explain impact of decisions",
        "Request clarification when requirements unclear",
        "Confirm understanding before proceeding"
      ],
      "basicMessageTemplates": {
        "statusUpdate": "Status: [ACTION] - [PROGRESS] ([PERCENTAGE]% complete)",
        "errorEncountered": "Issue encountered: [ERROR_TYPE]. [BASIC_EXPLANATION]. Options: [OPTIONS]",
        "approvalRequest": "Approval needed for [ACTION]. Impact: [IMPACT]. Proceed? (yes/no)",
        "limitReached": "[RESOURCE] limit reached ([N]/[MAX]). Available options: [OPTION_LIST]",
        "escalationNotice": "This requires detailed analysis. May I access comprehensive documentation to provide better guidance?"
      },
      "communicationEscalationTriggers": [
        "User expresses confusion about AI actions",
        "Multiple clarification requests from user", 
        "Complex approval scenarios with multiple impacts",
        "Error scenarios requiring detailed explanation",
        "Configuration changes with complex consequences",
        "First-time complex workflow execution"
      ],
      "escalationProtocol": "WHEN communication unclear or user confused â†’ ESCALATE to ../docs/directives/12-user-interaction.md for comprehensive communication protocols",
      "steps": [
        {
          "action": "assessCommunicationNeeds",
          "description": "Determine what user needs to understand",
          "required": true
        },
        {
          "action": "formatPlainLanguageExplanation",
          "description": "Translate technical details to plain language",
          "required": true
        },
        {
          "action": "provideClearOptions",
          "description": "Present multiple options when available",
          "required": true
        },
        {
          "action": "confirmUserUnderstanding",
          "description": "Verify user understanding before proceeding",
          "required": true
        }
      ]
    },
    "preferenceLearningAndAdaptation": {
      "directive": "Learn from user preferences and adapt behavior accordingly",
      "adaptationAreas": [
        "Preferred context modes for different task types",
        "Theme organization preferences",
        "Documentation detail levels",
        "Testing scope preferences",
        "Communication style preferences"
      ],
      "preferenceStorage": [
        "Document preferences in UserSettings/config.json",
        "Include preference reasoning in projectlogic.jsonl",
        "Respect established patterns unless user requests changes",
        "Ask for clarification when preferences conflict"
      ],
      "steps": [
        {
          "action": "identifyPreferencePatterns",
          "description": "Monitor user behavior for preference patterns",
          "required": true
        },
        {
          "action": "documentPreferences",
          "description": "Store preferences in appropriate configuration files",
          "required": true
        },
        {
          "action": "adaptBehavior",
          "description": "Adjust AI behavior based on learned preferences",
          "required": true
        },
        {
          "action": "validatePreferenceConflicts",
          "description": "Handle conflicts between preferences",
          "required": true
        }
      ]
    },
    "configurationManagement": {
      "directive": "Respect user configuration settings and provide clear explanations of behavior",
      "sessionBootConfiguration": {
        "setting": "tasks.resumeTasksOnStart",
        "default": false,
        "behavior": {
          "true": "AI automatically resumes active/incomplete tasks",
          "false": "AI lists incomplete tasks and asks user permission to resume"
        }
      },
      "backwardsCompatibilityConfiguration": {
        "setting": "project.backwardsCompatibility",
        "default": false,
        "behavior": {
          "true": "AI preserves existing interfaces and creates migration paths",
          "false": "AI can make breaking changes directly, overwriting/removing outdated code"
        }
      },
      "steps": [
        {
          "action": "loadUserConfiguration",
          "description": "Load user configuration settings",
          "required": true
        },
        {
          "action": "applyConfigurationBehavior",
          "description": "Apply behavior based on configuration settings",
          "required": true
        },
        {
          "action": "explainConfigurationImpact",
          "description": "Explain how configuration affects behavior",
          "required": true
        }
      ]
    },
    "errorHandlingAndUserCommunication": {
      "directive": "Handle errors gracefully with clear user communication",
      "errorCommunication": [
        "Explain what went wrong in plain language",
        "Provide specific steps to resolve the issue",
        "Offer multiple resolution options when possible",
        "Document the error and resolution for future reference"
      ],
      "userInputValidation": [
        "Validate user inputs before processing",
        "Provide clear error messages for invalid inputs",
        "Suggest corrections when validation fails",
        "Confirm understanding before proceeding"
      ],
      "steps": [
        {
          "action": "detectError",
          "description": "Identify error type and impact",
          "required": true
        },
        {
          "action": "formatUserFriendlyError",
          "description": "Translate error to plain language explanation",
          "required": true
        },
        {
          "action": "provideResolutionOptions",
          "description": "Offer multiple resolution paths",
          "required": true
        },
        {
          "action": "documentErrorAndResolution",
          "description": "Log error and resolution for future reference",
          "required": true
        }
      ]
    },
    "feedbackAndAdaptation": {
      "directive": "Continuously improve based on user feedback and interaction patterns",
      "feedbackCollection": [
        "Monitor user corrections and preferences",
        "Track frequently changed decisions",
        "Note user frustrations or confusion points",
        "Document successful interaction patterns"
      ],
      "adaptationImplementation": [
        "Adjust default behaviors based on user patterns",
        "Update configuration recommendations",
        "Improve communication clarity",
        "Refine approval processes based on user feedback"
      ],
      "steps": [
        {
          "action": "monitorUserFeedback",
          "description": "Track user feedback and interaction patterns",
          "required": true
        },
        {
          "action": "analyzePatterns",
          "description": "Identify patterns in user behavior and feedback",
          "required": true
        },
        {
          "action": "implementAdaptations",
          "description": "Adjust behavior based on analysis",
          "required": true
        },
        {
          "action": "documentImprovements",
          "description": "Log improvements and their rationale",
          "required": true
        }
      ]
    }
  },
  "configSettings": {
    "tasks.resumeTasksOnStart": {
      "default": false,
      "type": "boolean",
      "description": "Controls AI behavior when active/incomplete tasks are found during session boot"
    },
    "project.backwardsCompatibility": {
      "default": false,
      "type": "boolean",
      "description": "Determines whether AI maintains backwards compatibility when making changes"
    },
    "defaultMode": {
      "default": "theme-focused",
      "type": "string",
      "description": "Default context loading mode",
      "options": ["theme-focused", "theme-expanded", "project-wide"]
    },
    "escalationEnabled": {
      "default": true,
      "type": "boolean",
      "description": "Allow mid-task context escalation"
    },
    "readmeFirst": {
      "default": true,
      "type": "boolean",
      "description": "Prioritize README files for directory context"
    },
    "communication.plainLanguage": {
      "default": true,
      "type": "boolean",
      "description": "Use plain language explanations for technical concepts"
    },
    "communication.provideOptions": {
      "default": true,
      "type": "boolean",
      "description": "Provide multiple options when available"
    },
    "preferences.autoLearn": {
      "default": true,
      "type": "boolean",
      "description": "Automatically learn and adapt to user preferences"
    },
    "validation.enforceTaskMilestoneReference": {
      "default": true,
      "type": "boolean",
      "description": "Require all tasks to reference milestones"
    },
    "validation.enforceTaskThemeReference": {
      "default": true,
      "type": "boolean",
      "description": "Require all tasks to reference themes"
    },
    "validation.enforceSubtaskFlowReference": {
      "default": true,
      "type": "boolean",
      "description": "Require all subtasks to reference flow steps"
    },
    "validation.requireApprovalForStructureChanges": {
      "default": true,
      "type": "boolean",
      "description": "Require user approval for structural changes"
    }
  },
  "integrations": [
    "01-system-initialization",
    "03-session-management",
    "04-theme-management",
    "06-task-management",
    "11-quality-assurance",
    "13-metadata-management"
  ],
  "dependencies": [
    "UserSettings/config.json",
    "projectlogic.jsonl",
    "Tasks/active/",
    "ProjectBlueprint/metadata.json"
  ],
  "keyOperations": [
    "User approval management",
    "Clear communication protocols",
    "Preference learning and adaptation",
    "Configuration management",
    "Error handling and user communication",
    "Feedback collection and adaptation"
  ],
  "errorHandling": {
    "approvalTimeout": "Remind user of pending approval and provide context",
    "communicationFailure": "Simplify language and provide more context",
    "configurationError": "Use defaults and warn user about invalid settings",
    "preferencesConflict": "Ask user to clarify preference priority",
    "validationFailure": "Provide clear error messages and resolution steps"
  },
  "validation": {
    "approvalRequired": "Must obtain explicit user approval for specified operations",
    "communicationClarity": "Must communicate technical concepts in plain language",
    "preferencesRespected": "Must adapt behavior based on learned preferences",
    "configurationValid": "Must respect user configuration settings",
    "errorHandling": "Must provide clear error messages and resolution options"
  }
}