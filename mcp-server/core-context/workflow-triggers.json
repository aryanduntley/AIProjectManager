{
  "commonScenarios": {
    "user_says_continue_development": {
      "workflow": "sessionBootProtocol",
      "priority": "critical",
      "requiredFiles": ["blueprint.md", "completion-path.json", "active/TASK-*.json"],
      "actions": [
        "Load current milestone and implementation plan",
        "Resume incomplete tasks with full context",
        "Generate next tasks if no active tasks exist",
        "Load appropriate theme context for active tasks"
      ],
      "contextMode": "theme-focused",
      "directiveRef": "03-session-management.md#session-boot-protocol"
    },
    "file_exceeds_line_limit": {
      "workflow": "modularizationProtocol",
      "priority": "high", 
      "trigger": "file modification results in >maxFileLineCount lines",
      "actions": [
        "Split file by logical function groups",
        "Create proper module structure with index files",
        "Update all imports and references", 
        "Document modularization in directory README.md"
      ],
      "configRef": "project.maxFileLineCount",
      "directiveRef": "10-file-operations.md#modularization-guidelines"
    },
    "user_approval_required": {
      "workflow": "userApprovalProtocol",
      "priority": "critical",
      "triggers": [
        "ProjectBlueprint changes",
        "Theme structure modifications", 
        "Completion path updates",
        "Implementation plan creation"
      ],
      "actions": [
        "Present changes clearly with rationale",
        "Wait for explicit user approval", 
        "Apply changes only after confirmation",
        "Log approval decision in projectlogic.jsonl"
      ],
      "directiveRef": "12-user-interaction.md#user-approval-requirements"
    },
    "theme_discovery_needed": {
      "workflow": "themeDiscoveryProtocol",
      "priority": "high",
      "triggers": [
        "New project initialization",
        "Major project structure changes",
        "Theme validation failures"
      ],
      "actions": [
        "Analyze project structure and file patterns",
        "Generate theme definitions with evidence",
        "Present themes for user approval",
        "Create theme files in Themes/ directory"
      ],
      "contextMode": "project-wide",
      "directiveRef": "04-theme-management.md#automatic-theme-discovery"
    },
    "context_escalation_needed": {
      "workflow": "contextEscalationProtocol", 
      "priority": "medium",
      "triggers": [
        "Task requires files outside primary theme",
        "Cross-theme dependencies detected",
        "Implementation spans multiple domains"
      ],
      "actions": [
        "Assess current context scope insufficiency",
        "Escalate to theme-expanded or project-wide",
        "Load additional theme context as needed",
        "Log escalation decision and reasoning"
      ],
      "directiveRef": "05-context-loading.md#context-escalation-protocol"
    },
    "task_completion_validation": {
      "workflow": "completionValidationProtocol",
      "priority": "high",
      "triggers": [
        "Task marked as completed",
        "Milestone completion claimed",
        "Project completion preparation"
      ],
      "actions": [
        "Validate all success criteria met",
        "Check TODO resolution if project completion",
        "Update completion-path.json milestone status",
        "Archive completed tasks and update logs"
      ],
      "directiveRef": "06-task-management.md#completion-validation"
    }
  },
  "quickReference": {
    "session_boot": "sessionBootProtocol",
    "file_operations": "modularizationProtocol + antiPlaceholderProtocol",
    "user_interaction": "userApprovalProtocol",
    "theme_management": "themeDiscoveryProtocol + themeValidation",
    "context_loading": "contextEscalationProtocol + readmeGuidedLoading",
    "task_management": "taskLifecycleManagement + completionValidation",
    "quality_assurance": "validationRequirements + dataIntegrityProtocol"
  },
  "emergencyProcedures": {
    "validation_failure": "Stop execution, report specific failure, request user guidance",
    "file_not_found": "Check theme definitions, validate file paths, suggest context escalation",
    "context_insufficient": "Escalate context mode, load additional themes, notify user",
    "user_approval_timeout": "Maintain current state, log decision point, resume only after approval"
  }
}